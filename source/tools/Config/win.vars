##############################################################
#
# This file contains general variable definitions used by the PinTools makefiles.
# See makefile.unix.config for an explanation of each variable defined in this file.
#
##############################################################

###### Architecture ######

# Identify the architecture of the host
ifndef HOST_ARCH
    ifeq ($(XARCH),64)
        HOST_ARCH := intel64
    else
        ifeq ($(XARCH),32)
            HOST_ARCH := ia32
        else
            ifeq ($(XARCH),86)
                HOST_ARCH := ia32
            else
                ifeq ($(PROCESSOR_ARCHITEW6432),AMD64)
                    HOST_ARCH := intel64
                else
                    ifeq ($(PROCESSOR_ARCHITECTURE),AMD64)
                        HOST_ARCH := intel64
                    endif
                    ifeq ($(PROCESSOR_ARCHITECTURE),x86)
                        HOST_ARCH := ia32
                    endif
               endif
            endif
        endif
    endif
endif

# Verify known host
ifndef HOST_ARCH
    $(error Could not detect the host architecture. Please define HOST_ARCH from the command line.)
endif

# Define the architecture of the target
TARGET := $(HOST_ARCH)
ifeq ($(TARGET),ia32)
    BITS := 32
else
    BITS := 64
endif

# Define the output directory
OBJDIR := obj-$(TARGET)/

###### Operating system ###### 

# Identify the operating system
ifneq ($(TARGET_OS),windows)
    TARGET_OS := windows
endif

# Define the general OS type
OS_TYPE := win

###### Compiler and linker definitions ######

# COMPILER may have already been defined during the build so don't override it with the hardcoded defaults below.
COMPILER ?= msvc
ifdef ICCPIN
    COMPILER ?= icc
endif

# TODO: check if CC and/or CXX have paths to icl
ifeq ($(ICC),1)
    CC := icl
    CXX := icl
    LINKER = xilink
else
    # CC and CXX are defined here to make sure that the default on Windows is cl.
    # This is not necessary on Unix.
    CC := cl
    CXX := cl
    LINKER := link
endif

ARCHIVER := lib /out:
ifeq ($(TARGET),ia32)
    ASMBLR := ml
else
    ASMBLR := ml64
endif

###### File extensions ######

EXE_SUFFIX := .exe
OBJ_SUFFIX := .obj
DLL_SUFFIX := .dll
PINTOOL_SUFFIX := $(DLL_SUFFIX)
SATOOL_SUFFIX := .exe
LIB_SUFFIX := .lib
ASM_SUFFIX := .asm
DLL_PREFIX :=

###### Additional utilities ######

RM := $(CMD_PREFIX)rm
PYTHON := $(CMD_PREFIX)python
DIFF := $(CMD_PREFIX)diff -w
CMP := $(CMD_PREFIX)cmp
CMD := $(CMD_PREFIX)cmd /C
GREP := $(CMD_PREFIX)grep
QGREP := $(CMD_PREFIX)grep -q
CGREP := $(CMD_PREFIX)grep -c
LINECOUNT := $(CMD_PREFIX)wc -l
BASHTEST := $(CMD_PREFIX)test
TOUCH := $(CMD_PREFIX)touch
STRIP :=
SET_DLL_PATH :=
SORT := $(CMD_PREFIX)sort
